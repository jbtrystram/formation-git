name: Formating and build

on:
  push:
  pull_request:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - name: Run Rustfmt
        run: cargo fmt -- --check
      - name: Cargo test
        run: cargo test
      - name: Cargo check
        run: cargo check

  build:
    needs:
      - check

    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        include:
          - os: ubuntu-18.04
            suffix: "linux-amd64"
            pkg: "tar.gz"
          - os: macos-10.15
            suffix: "macos-amd64"
            pkg: "tar.gz"
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install build tools
        if: ${{ matrix.os == 'ubuntu-18.04' }}
        run: |
          sudo apt-get update; DEBIAN_FRONTEND="noninteractive" sudo apt-get -y install build-essential curl tzdata
          sudo apt install -y libssl-dev pkg-config

      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
